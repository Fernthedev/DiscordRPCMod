buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        //classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
plugins {
    id "com.github.johnrengelman.shadow" version "1.2.4"
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = "1.2"
group = "com.github.fernthedev" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "DiscordMod"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

configurations {
    shade
    compile.extendsFrom shade
}

reobf {
    shadowJar{} // Reobfuscate the shadowed JAR
}

shadowJar {
    baseName = project.name //+ '-all'
    relocate 'org.apache.log4j', 'shadow.org.apache.logging.log4j'
    relocate 'org.apache', 'shadow.org.apache'
}

jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
    }
}
minecraft {
//    version = "1.8-11.14.4.1563"
    version = "1.12.2-14.23.3.2655"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171003"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
//        srgExtra "PK: org/ejml your/new/package/here/ejml"
 //       srgExtra "PK: org/ejml/alg your/new/package/here/ejml/alg"
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'discordmod',
                'Implementation-Version': version,
                'Main-Class': 'com.github.fernthedev.DiscordMod'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

/*repositories {
    maven {
        name = 'Tethys (drakon.io)'
        url = "http://tethys.drakon.io/maven"
    }
}*/

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
    //compile 'com.jagrosh:DiscordIPC:LATEST'
    compile 'org.json:json:20171018'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
//    compile 'io.drakon:pulsar:1.2.1'
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
//     shade fileTree(dir: 'libs', include: '*.jar')

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

